#!/usr/bin/env bash

is_git_directory() {
  printf "$1;$(cd $1; git rev-parse --is-inside-work-tree)\n"
}

get_workflows() {
  local filename=$1
  find "$filename" -mindepth 1 -maxdepth 1 -type d -exec bash -c 'for pathname do is_git_directory "$pathname"; done' bash {} + \
    | grep ";true" | sed "s/;true//"
}

export -f is_git_directory

if [[ $# -eq 1 ]]; then
    selected=$1
else
  personal=$(find ~/.dotfiles ~/Projects/private/computer-enhance \
    ~/Projects/private/zig \
    ~/Projects/private/clojure \
    ~/Projects/private/xcode \
    ~/Projects/private/go \
    -mindepth 1 -maxdepth 1 -type d -not -iwholename '*.git')

  server_workflows=$(get_workflows ~/Projects/humbleai/humble-server.git)
  hai_workflows=$(get_workflows ~/Projects/humbleai/hai)
  app_script_workflows=$(get_workflows ~/Projects/humbleai/humble-app-script.git)
  selected=$(printf "${personal}\n${server_workflows}\n${hai_workflows}\n${app_script_workflows}" | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_root_name=$(basename "$(dirname "$selected")" | tr . _)
selected_name=$(basename "$selected" | tr . _)
session_name="$selected_root_name/$selected_name"
tmux_running=$(pgrep tmux)


if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s $session_name -c $selected
    exit 0
fi

if ! tmux has-session -t=$session_name 2> /dev/null; then
    tmux new-session -ds $session_name -c $selected
fi

tmux switch-client -t $session_name
